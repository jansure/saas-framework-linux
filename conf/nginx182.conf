#user  nobody;
user root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

# add dynamic module
load_module "modules/ngx_http_shellface_module.so";
load_module "modules/ngx_http_mytest_module.so";
load_module "modules/ngx_http_mysendfile_module.so";
load_module "modules/ngx_http_hello_world_module.so";

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    server {
        listen       9080;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # 直接在浏览器访问服务器/root/目录下的文档
        location ^~ /download/ {
            alias /root/;

            if ($request_uri ~* ^.*\/(.*)\.(txt|doc|pdf|rar|gz|zip|docx|exe|xlsx|ppt|pptx|jpg|png)(\?n=([^&]+))$) {
                    add_header Content-Disposition "attachment;filename=$arg_n.$2";
            }
        }

        location / {
            root   html;
            index  index.html index.htm;
        }

        # 自定义Nginx动态模块测试
        location /test {
            mytest helloworld;
        }

        location /shellface {
            shellface helloworld;
        }

        location /mysendfile {
            mysendfile;
        }

        location /shm {
            hello_world myshm=test:4M;
        }

        # nginx接收到服务请求之后调用相应算法的可执行程序
        location /api/ls {
            content_by_lua_file /root/openresty-1.13.6.2/script/ls.lua;
        }
        location /api/tri {
            # 仅允许POST请求
            if ($request_method != POST) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file /root/openresty-1.13.6.2/script/tri.lua;
        }
        # 查询进程名是否存在
        location /api/proc {
            # 仅允许GET请求
            if ($request_method != GET) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file /root/openresty-1.13.6.2/script/process_status.lua;
        }
        location /api/tridebug {
            content_by_lua_file /root/openresty-1.13.6.2/script/tri_debug.lua;
        }
        location /api/rect {
            content_by_lua_file /root/openresty-1.13.6.2/script/rect.lua;
        }
        location /api/retri {
            content_by_lua_file /root/openresty-1.13.6.2/script/retri.lua;
        }

        # nginx接收到服务请求之后调用可执行程序，持续写入文件，并修改进程名
        # cmd_path：python /root/appendFile/appendFile.py
        # cmd_param：-d /root/appendFile/ -f app.txt -s 60
        location /api/appendfile {
            content_by_lua_file /root/openresty-1.13.6.2/script/append_file.lua;
        }

        # 获取计算结果
        location /api/downloadfile {
            # 仅允许POST请求
            if ($request_method != POST) {
                # Method not allowed
                return 405;
            }
            content_by_lua_file /root/openresty-1.13.6.2/script/download_file.lua;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
