---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by yangpf.
--- DateTime: 1/23/19 9:53 AM
---
local cjson = require("cjson")
local vdata = {}
--- 函数：读取文件
function getFile(file_name)
    --- 以只读方式打开文件
    local f = assert(io.open(file_name, 'r'))
    --- 从当前位置读取整个文件
    local string = f:read("*a")
    --- 关闭打开的文件
    f:close()
    return string
end

--- 读取请求体body
ngx.req.read_body()
--- 读取请求体data
local bodydata = ngx.req.get_body_data()
ngx.log(ngx.ERR, "request data: ", bodydata)

--- 若请求体data为nil，说明数据超出限制，已被存入磁盘文件，使用get_body_file()函数获取
if nil == bodydata then
    local file_name = ngx.req.get_body_file()
    ngx.log(ngx.ERR, "request file_name: ", file_name)
    if file_name then
        bodydata = getFile(file_name)
    end
end

--- 建立tcp连接
local tcpsock = ngx.socket.tcp()
local host = "114.115.206.58"
local port = 7000
local ok, err = tcpsock:connect(host, port)
if not ok then
    ngx.log(ngx.ERR, "failed to connect tcp server:", err)
    return
end
--- 3000 seconds timeout
tcpsock:settimeout(3000000)
local bytes, err = tcpsock:send(bodydata.."\r\n\r\n")
if err then
    ngx.log(ngx.ERR, "failed to send data to tcp server:", err)
    return
end

ngx.log(ngx.ERR, "successfully send data to tcp server:", bytes)

--- receive response
local response, err, part = tcpsock:receive()
if (not response) and (err ~= 'timeout') then
    ngx.log(ngx.ERR, "failed to receive data from tcp server:", err)
    return
end
response = response or part
if not response then
    ngx.log(ngx.ERR, "failed to receive data from tcp server:", err)
    return
end
ngx.log(ngx.ERR, "successfully receive data from tcp server:", response)

vdata = cjson.decode(response)
local resp = vdata["response"]
if resp == "server_getfile_prepare" then
    ngx.say("-----server getfile prepare")
else
    ngx.say(response)
end
--ngx.say(response)
tcpsock:send("bye ")
ngx.log(ngx.ERR, "send bye!")
tcpsock:close()


